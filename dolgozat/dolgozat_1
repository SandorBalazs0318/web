// Swap the head and the tail
function swapHeadAndTail(arr) {
    const length = arr.length;
    const middle = Math.floor(length / 2);

    if (length % 2 !== 0) {
        const arr2 = arr.slice(middle + 1).concat(arr[middle], arr.slice(0, middle));
        return arr2;
    } else {
        const arr2 = arr.slice(middle).concat(arr.slice(0, middle));
        return arr2;
    }
}

console.log(swapHeadAndTail([ 1, 2, 3, 4, 5 ]), [ 4, 5, 3, 1, 2 ]);
console.log(swapHeadAndTail([ -1, 2 ]), [ 2, -1 ]);
console.log(swapHeadAndTail([ 1, 2, -3, 4, 5, 6, -7, 8 ]), [ 5, 6, -7, 8, 1, 2, -3, 4 ]);


// All or Nothing
function possiblyPerfect(key,answers) {
    for(const i = 0;i<answers.length;i++){
        if(key[i] === answers[i]){
            return true
        }
        else if(key[i] !== answers[i]){
            return true
        }
        else if()
    }
}

console.log( possiblyPerfect([..."A_C_B"],[..."ADCEB"]) + " >> true ");
console.log( possiblyPerfect([..."B_B"],[..."BDC"]) + " >> false ");
console.log( possiblyPerfect([..."T_FFF"],[..."FFTTT"]) + " >> true ");
console.log( possiblyPerfect([..."BA__"],[..."BACC"]) + " >> true ");
console.log( possiblyPerfect([..."ABA_"],[..."BACC"]) + " >> true ");
console.log( possiblyPerfect([..."ABC_"],[..."BACC"]) + " >> false ");
console.log( possiblyPerfect([..."B_"],[..."CA"]) + " >> true ");
console.log( possiblyPerfect([..."BA"],[..."CA"]) + " >> false ");
console.log( possiblyPerfect([..."B"],[..."B"]) + " >> true ");
console.log( possiblyPerfect([..."_T__"],[..."TFFF"]) + " >> true ");
console.log( possiblyPerfect([..."_T__"],[..."TTFT"]) + " >> true ");
console.log( possiblyPerfect([..."_TTT"],[..."TTFT"]) + " >> false ");
console.log( possiblyPerfect([..."_TTT"],[..."TTTT"]) + " >> true ");
console.log( possiblyPerfect([..."_TTT"],[..."FFFF"]) + " >> true ");
console.log( possiblyPerfect([..."____"],[..."FFFF"]) + " >> true ");



// Mean vs. Median
function meanVsMedian(arr) {
    const mean = arr.reduce((sum, num) => sum + num, 0) / arr.length;
    const sortedArr = arr.slice().sort((a, b) => a - b);
    const median = sortedArr[Math.floor(arr.length / 2)];
    
    if (mean > median) {
      return 'mean';
    } else if (median > mean) {
      return 'median';
    } else {
      return 'same';
    }
}

console.log(meanVsMedian([1, 1, 1]), ' >> same');
console.log(meanVsMedian([1, 2, 37]), ' >> mean');
console.log(meanVsMedian([7, 14, -70]), ' >> median');
